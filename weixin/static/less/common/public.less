@charset "UTF-8";
.bg(...) {
  background: @arguments;
}

.bg-c(@color) {
  background-color: @color;
}

.bg-c(@rchannel,@gchannel,@bchannel) {
  background-color: rgb(@rchannel, @gchannel, @bchannel);
}

.bg-c-a(@rgbacolor) {
  background-color: @rgbacolor;
}

.parseRGB(@color) {
  @rchannel: red(@color);
  @gchannel: green(@color);
  @bchannel: blue(@color);
  @rgbacolor: rgba(@rchannel, @gchannel, @bchannel, @alpha);
}

.bg-c-a(@color, @alpha) {
  .parseRGB(@color);
  background-color: @rgbacolor;
}

.bg-c-a(@rchannel, @gchannel, @bchannel, @alpha) {
  background-color: rgba(@rchannel, @gchannel, @bchannel, @alpha);
}

.bg-c-ie(@color, @alpha) {
  .parseRGB(@color);
  @argbcolor: argb(@rgbacolor);
  background-color: transparent \9;
  filter: ~"progid:DXImageTransform.Microsoft.gradient(startColorstr=@{argbcolor},endColorstr=@{argbcolor})\9";
}

.bg-i(@url) when (@url = none) {
  background-image: none;
}

.bg-i(@url) when (default()) {
  background-image: url(@url);
}

.bg-p(...) {
  background-position: @arguments;
}

.bg-r(@d) when (@d = x) {
  background-repeat: repeat-x;
}

.bg-r(@d) when (@d = y) {
  background-repeat: repeat-y;
}

.bg-r(@d) when (@d = no), (@d = false) {
  background-repeat: no-repeat;
}

.bg-r(@d) when (@d = yes), (@d = true) {
  background-repeat: repeat;
}

// 背景定位
.bg-f(@b : true) when (@b = true), (@b = yes) {
  background-attachment: fixed;
}

.bg-f(@b : true) when (@b = false), (@b = no) {
  background-attachment: scroll;
}

.bg-a(@d) when (@d = true), (@d = yes) {
  background-attachment: fixed;
}

.bg-a(@d) when (@d = false), (@d = no) {
  background-attachment: scroll;
}

// 背景模式
.bg-s(@k) {
  background-size: @k;
}

.bg-s(@h, @v) {
  background-size: @h @v;
}

// 边框部分
.bd(...) {
  border: @arguments;
}

.bd-c(...) {
  border-color: @arguments;
}

.bd-w(...) {
  border-width: @arguments;
}

.bd-s(...) {
  border-style: @arguments;
}

.bd-l(...) {
  border-left: @arguments;
}

.bd-l-c(@color) {
  border-left-color: @color;
}

.bd-l-w(@width) {
  border-left-width: @width;
}

.bd-l-s(@style) {
  border-left-style: @style;
}

.bd-r(...) {
  border-right: @arguments;
}

.bd-r-c(@color) {
  border-right-color: @color;
}

.bd-r-w(@width) {
  border-right-width: @width;
}

.bd-r-s(@style) {
  border-right-style: @style;
}

.bd-b(...) {
  border-bottom: @arguments;
}

.bd-b-c(@color) {
  border-bottom-color: @color;
}

.bd-b-w(@width) {
  border-bottom-width: @width;
}

.bd-b-s(@style) {
  border-bottom-style: @style;
}

.bd-t(...) {
  border-top: @arguments;
}

.bd-t-c(@color) {
  border-top-color: @color;
}

.bd-t-w(@width) {
  border-top-width: @width;
}

.bd-t-s(@style) {
  border-top-style: @style;
}

.out(...) {
  outline: @arguments;
}

.radius(...) {
  border-radius: @arguments;
  -webkit-border-radius:@arguments;
}

.round() {
  border-radius: 50%;
}

// 其他效果
// 低端IE8-也用的透明
.alpha(@num) {
  @n: @num * 100;
  filter: ~"alpha(opacity=@{n})";
}

// IE9+及四大浏览器的透明
.opacity(@float) {
  opacity: @float;
}

// 盒阴影
.shadow(...) {
  box-shadow: @arguments;
}

// 文本阴影
.t-shadow(...) {
  text-shadow: @arguments;
}

// 鼠标
.cur(@shape) {
  cursor: @shape;
}

.c-d() {
  cursor: default;
}

.c-w() {
  cursor: wait;
}

.c-h() {
  cursor: help;
}

.c-p() {
  cursor: pointer;
}

.c-n() {
  cursor: not-allowed;
}

.c-t() {
  cursor: text;
}

.c-m() {
  cursor: move;
}

// 盒模型：尺寸、边距、填充
.h(@height : auto) {
  height: @height;
}

.line(@n : normal) {
  line-height: @n;
}

.hline(@h) {
  height: @h;
  line-height: @h;
}

.w(@width : auto) {
  width: @width;
}

.wh(@size) {
  width: @size;
  height: @size;
}

.wh(@w, @h) {
  width: @w;
  height: @h;
}

.whline(@size) {
  width: @size;
  height: @size;
  line-height: @size;
}

.maxh(@height : none) {
  max-height: @height;
}

.maxw(@width : none) {
  max-width: @width;
}

.minh(@height : 0) {
  min-height: @height;
}

.minw(@width : 0) {
  min-width: @width;
}

// 外边距
.m(...) {
  margin: @arguments;
}

.ml(@m : auto) {
  margin-left: @m;
}

.mr(@m : auto) {
  margin-right: @m;
}

.mt(@m : auto) {
  margin-top: @m;
}

.mb(@m : auto) {
  margin-bottom: @m;
}

.ma() {
  margin-left: auto;
  margin-right: auto;
}

.ma(@top, @bottom) {
  .ma();
  margin-top: @top;
  margin-bottom: @bottom;
}

// 内边距
.p(...) {
  padding: @arguments;
}

.pl(@p) {
  padding-left: @p;
}

.pr(@p) {
  padding-right: @p;
}

.pt(@p) {
  padding-top: @p;
}

.pb(@p) {
  padding-bottom: @p;
}

// 溢出
.o(@way : hidden) {
  overflow: @way;
}

.o-s() {
  overflow: scroll;
}

.o-x-s() {
  overflow-x: scroll;
}

.o-y-s() {
  overflow-y: scroll;
}

.o-a() {
  overflow: auto;
}

.o-a-h() {
  overflow-x: auto;
  overflow-y: hidden;
}

.o-a-v() {
  overflow-y: auto;
  overflow-x: hidden;
}

// 盒模式
.block() {
  display: block;
}

.inline() {
  display: inline;
}

.inblock() {
  display: inline-block;
}

.none() {
  display: none;
}

.box() {
  display: -webkit-box;
  display: -moz-box;
}

.display(@w : default) {
  display: @w;
}

// 可见
.visible() {
  visibility: visible;
}

.hidden() {
  visibility: hidden;
}

// 盒式
.bbox() {
  box-sizing: border-box;
}

.cbox() {
  box-sizing: content-box;
}

// 定位、浮动、z轴
.absolute() {
  position: absolute;
}

.relative() {
  position: relative;
}

.fixed() {
  position: fixed;
}

.clear() {
  clear: both;
}

.l(@p : 0) {
  left: @p;
}

.r(@p : 0) {
  right: @p;
}

.t(@p : 0) {
  top: @p;
}

.b(@p : 0) {
  bottom: @p;
}

.lt(@l : 0, @t : 0) {
  left: @l;
  top: @t;
}

.lb(@l : 0, @b : 0) {
  left: @l;
  bottom: @b;
}

.rt(@r : 0, @t : 0) {
  right: @r;
  top: @t;
}

.rb(@r : 0, @b : 0) {
  right: @r;
  bottom: @b;
}

.ltrb(@l : 0, @t : 0,@r : 0, @b : 0) {
  left: @l;
  top: @t;
  right: @r;
  bottom: @b;
}

.z(@z) {
  z-index: @z;
}

.fl() {
  float: left;
}

.fr() {
  float: right;
}

.fn() {
  float: none;
}

// 文本效果
.c(@c) {
  color: @c;
}

.family(...) {
  font-family: @arguments;
}

.yahei() {
  font-family: Microsoft Yahei;
}

.symsun() {
  font-family: symsun;
}

.size(@s : 12px) {
  font-size: @s;
}

.bold(@bool : true) when (@bool = true) {
  font-weight: bold;
}

.bold(@bool : true) when (@bool = false) {
  font-weight: normal;
}

.italic(@bool : true) when (@bool = true) {
  font-style: oblique;
  font-style: italic;
}

.italic(@bool : true) when (@bool = false) {
  font-style: normal;
}

.t-l() {
  text-align: left;
}

.t-c() {
  text-align: center;
}

.t-r() {
  text-align: right;
}

.nowrap() {
  white-space: nowrap;
}

.wrap() {
  white-space: normal;
}

.valign(@d : middle) {
  vertical-align: @d;
}

.cnt(@s : '') {
  content: @s;
}

.indent(@n : 2em) {
  text-indent: @n;
}

.noline() {
  text-decoration: none;
}

.decorate(@w : none) {
  text-decoration: @w;
}

.ellipsis() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.break() {
  word-break: break-all;
  word-wrap: break-word;
}

.trans(@speed : normal) when (@speed = normal) {
  .transition(all linear .2s);
}

.trans(@speed : normal) when (@speed = no) {
  .transition(none);
}

// 满尺寸，通常用于图片
.full() {
  width: 100%;
  height: 100%;
}

// 可调整大小
.noresize() {
  resize: none !important;
}

.mellipsis(@number) {
  display: -webkit-box;
  overflow : hidden;
  text-overflow: ellipsis;
  -webkit-line-clamp: @number;
  -webkit-box-orient: vertical;
}

.text-ellipsis(){
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}

.box-flex(@flex) {
  -webkit-box-flex: @flex;
  -moz-box-flex: @flex;
  -ms-box-flex: @flex;
}

// CSS3属性
.flex(@flex) {
  flex: @flex;
  -webkit-flex: @flex;
  -moz-flex: @flex;
  -o-flex: @flex;
  -ms-flex: @flex;
}

.order(@order) {
  order: @order;
  -webkit-order: @order;
  -moz-order: @order;
  -o-order: @order;
  -ms-order: @order;
}

.fd-r() {
  flex-direction: row;
  -webkitflex-direction: row;
  -moz-flex-direction: row;
  -o-flex-direction: row;
  -ms-flex-direction: row;
}

.fd-c() {
  flex-direction: column;
  -webkitflex-direction: column;
  -moz-flex-direction: column;
  -o-flex-direction: column;
  -ms-flex-direction: column;
}

.fd-rr() {
  flex-direction: row-reverse;
  -webkitflex-direction: row-reverse;
  -moz-flex-direction: row-reverse;
  -o-flex-direction: row-reverse;
  -ms-flex-direction: row-reverse;
}

.fd-cr() {
  flex-direction: column-reverse;
  -webkitflex-direction: column-reverse;
  -moz-flex-direction: column-reverse;
  -o-flex-direction: column-reverse;
  -ms-flex-direction: column-reverse;
}

.jc-around() {
  justify-content: space-around;
  -webkitjustify-content: space-around;
  -moz-justify-content: space-around;
  -o-justify-content: space-around;
  -ms-justify-content: space-around;
}

.jc-between() {
  justify-content: space-between;
  -webkitjustify-content: space-between;
  -moz-justify-content: space-between;
  -o-justify-content: space-between;
  -ms-justify-content: space-between;
}

.jc-c() {
  justify-content: center;
  -webkitjustify-content: center;
  -moz-justify-content: center;
  -o-justify-content: center;
  -ms-justify-content: center;
}

.fw-w () {
  flex-wrap: wrap;
  -webkitflex-wrap: wrap;
  -moz-flex-wrap: wrap;
  -o-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
}

.fw-nw() {
  flex-wrap: nowrap;
  -webkitflex-wrap: nowrap;
  -moz-flex-wrap: nowrap;
  -o-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
}

.transition(...) {
  transition: @arguments;
  -webkit-transition: @arguments;
  -moz-transition: @arguments;
  -o-transition: @arguments;
  -ms-transition: @arguments;
}